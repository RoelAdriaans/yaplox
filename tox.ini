[tox]
skipsdist = True
envlist =
    linters
    py38

[pytest]
# Makes all warnings be fatal
filterwarnings = error

testpaths = tests
addopts = --cov --cov-report=term --cov-report=html

[flake8]
max-complexity = 10
filename=
    ./src/*.py,
    ./src/**/*.py,
    ./tests/*.py,
    ./tests/**/*.py

# Set to 88 for black
max-line-length = 88
statistics = True
exclude =
    docs
    build
    env
    .venv
    venv
    .tox
format = ${cyan}%(path)s${reset}:${yellow_bold}%(row)d${reset}:${green_bold}%(col)d${reset}: ${red_bold}%(code)s${reset} %(text)s

[coverage:run]
branch = True
omit =
    */__init__.py
    */__main__.py

source =
    yaplox
    tests

[coverage:report]
fail_under = 80
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain if tests don't hit defensive assertion code:
    raise NotImplementedError

[testenv]
whitelist_externals =
    poetry
;    coverage
skip_install = true
deps =
    coverage
    pytest
    pytest-cov
    pytest-mock
;    pytest-xdist
commands =
    # We have to install the package first
    poetry install --no-interaction
    pytest {posargs}

    ; -n 4

[isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = True
line_length = 88

[testenv:flake8]
skip_install = true
deps =
    flake8
    pep8-naming
    flake8-colors
    flake8-blind-except

commands =
    flake8 \
        # E203 is not PEP8 compliant https://github.com/ambv/black#slices
        # W503 is not PEP8 compliant https://github.com/ambv/black#line-breaks--binary-operators
        --ignore E203,W503 \
        {posargs}

[testenv:black]
skip_install = true
deps =
    black
commands =
    black --check --diff src/ tests/

[testenv:mypy]
skip_install = true
description = type check ourselves
deps = mypy
commands =
    python -m mypy --config-file mypy.ini src/

[testenv:isort]
skip_install = true
description = Make sure our imports are nicely sorted
deps = isort
commands =
    isort  --check-only src/ tests/

# Combines all linters in one, fast, env
[testenv:linters]
skip_install = true
deps =
    {[testenv:black]deps}
    {[testenv:flake8]deps}
    {[testenv:isort]deps}
    {[testenv:mypy]deps}
commands =
    {[testenv:black]commands}
    {[testenv:flake8]commands}
    {[testenv:isort]commands}
    {[testenv:mypy]commands}
